data <- data.frame(Z,
Sex,
Trans,
Age,
S,
Y
)
return(data)
}
set.seed(123)
data_true <- f_sim(N = 10^6)
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau11_true
S_coef_simu <- c(-1, # intercept,
1, # coef of Z,
0.6, # coef of Sex,
-0.2, # coef of Trans,
0.02 # coef of Age
)
Y_coef_simu <-  c(0.6, # intercept,
-0.5, # coef of Z
0.2, # coef of S
0.3, # coef of Sex
0.2, # coef of Trans
0.01, # coef of Age
-0.1, # coef of Sex * Z
0.01 # coef of Age * S
)
# Based on vaccine data, we have 3 baseline covariates:
#  Sex (binary), transformed variable (binary), age (continuous)
f_sim <- function(N = 200*2, # sample size for two groups
seed = 123, # random seed
pi_Z = 0.5, # treatment propensity score: ratio of treatment / control, constant
male_p = 0.5, # ratio of male
trans_p = 0.8, # ratio of transformed variable
age_mu = 50, # mean of age
age_sd = 4, # sd of age
S_coef = S_coef_simu, # coef of S's model - c(intercept, Z, Sex, Trans, Age)
Y_coef = Y_coef_simu,
Y_sd = 0.4
){
set.seed(seed)
## Generate baseline variables
Sex <- rbinom(n = N, size = 1, prob = male_p) # 1 means male, 0 means female
Trans <- rbinom(n = N, size = 1, prob = trans_p)
Age <- rnorm(n = N, mean = age_mu, sd = age_sd)
## Generate treatment assignment Z (Z = 1, treatment)
Z <- rbinom(N, size = 1, prob = pi_Z)
## Generate intermediate variable (S = 1, adherence)
XZ_matrix <- matrix(c(rep(1, N),
Z,
Sex,
Trans,
Age),
nrow = N,
byrow = F)
S_prob <-  1 / (1 + exp(- XZ_matrix %*% S_coef))
S <- apply(S_prob, 1, function(prob){
rbinom(1, size = 1, prob = prob)
})
## Generate outcome Y
XZS_matrix <- matrix(c(rep(1, N),
Z,
S,
Sex,
Trans,
Age,
Sex * Z,
Age * S),
nrow = N,
byrow = F)
Y_mu <- XZS_matrix %*% Y_coef
Y <- rnorm(N, mean = Y_mu, sd = Y_sd)
data <- data.frame(Z,
Sex,
Trans,
Age,
S,
Y
)
return(data)
}
set.seed(123)
data_true <- f_sim(N = 10^6)
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau11_true
S_coef_simu <- c(-1, # intercept,
1, # coef of Z,
0.6, # coef of Sex,
-0.2, # coef of Trans,
0.02 # coef of Age
)
Y_coef_simu <-  c(0.5, # intercept,
-0.3, # coef of Z
0.7, # coef of S
0.3, # coef of Sex
0.2, # coef of Trans
0.01, # coef of Age
-0.1, # coef of Sex * Z
0.01 # coef of Age * S
)
# Based on vaccine data, we have 3 baseline covariates:
#  Sex (binary), transformed variable (binary), age (continuous)
f_sim <- function(N = 200*2, # sample size for two groups
seed = 123, # random seed
pi_Z = 0.5, # treatment propensity score: ratio of treatment / control, constant
male_p = 0.5, # ratio of male
trans_p = 0.8, # ratio of transformed variable
age_mu = 50, # mean of age
age_sd = 4, # sd of age
S_coef = S_coef_simu, # coef of S's model - c(intercept, Z, Sex, Trans, Age)
Y_coef = Y_coef_simu,
Y_sd = 0.4
){
set.seed(seed)
## Generate baseline variables
Sex <- rbinom(n = N, size = 1, prob = male_p) # 1 means male, 0 means female
Trans <- rbinom(n = N, size = 1, prob = trans_p)
Age <- rnorm(n = N, mean = age_mu, sd = age_sd)
## Generate treatment assignment Z (Z = 1, treatment)
Z <- rbinom(N, size = 1, prob = pi_Z)
## Generate intermediate variable (S = 1, adherence)
XZ_matrix <- matrix(c(rep(1, N),
Z,
Sex,
Trans,
Age),
nrow = N,
byrow = F)
S_prob <-  1 / (1 + exp(- XZ_matrix %*% S_coef))
S <- apply(S_prob, 1, function(prob){
rbinom(1, size = 1, prob = prob)
})
## Generate outcome Y
XZS_matrix <- matrix(c(rep(1, N),
Z,
S,
Sex,
Trans,
Age,
Sex * Z,
Age * S),
nrow = N,
byrow = F)
Y_mu <- XZS_matrix %*% Y_coef
Y <- rnorm(N, mean = Y_mu, sd = Y_sd)
data <- data.frame(Z,
Sex,
Trans,
Age,
S,
Y
)
return(data)
}
set.seed(123)
data_true <- f_sim(N = 10^6)
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau11_true
S_coef_simu <- c(-1, # intercept,
1, # coef of Z,
0.6, # coef of Sex,
-0.4, # coef of Trans,
0.02 # coef of Age
)
Y_coef_simu <-  c(0.5, # intercept,
-0.3, # coef of Z
0.7, # coef of S
0.2, # coef of Sex
-0.2, # coef of Trans
0.01, # coef of Age
0.1, # coef of Sex * Z
0.01 # coef of Age * S
)
# Based on vaccine data, we have 3 baseline covariates:
#  Sex (binary), transformed variable (binary), age (continuous)
f_sim <- function(N = 200*2, # sample size for two groups
seed = 123, # random seed
pi_Z = 0.5, # treatment propensity score: ratio of treatment / control, constant
male_p = 0.5, # ratio of male
trans_p = 0.8, # ratio of transformed variable
age_mu = 50, # mean of age
age_sd = 4, # sd of age
S_coef = S_coef_simu, # coef of S's model - c(intercept, Z, Sex, Trans, Age)
Y_coef = Y_coef_simu,
Y_sd = 0.4
){
set.seed(seed)
## Generate baseline variables
Sex <- rbinom(n = N, size = 1, prob = male_p) # 1 means male, 0 means female
Trans <- rbinom(n = N, size = 1, prob = trans_p)
Age <- rnorm(n = N, mean = age_mu, sd = age_sd)
## Generate treatment assignment Z (Z = 1, treatment)
Z <- rbinom(N, size = 1, prob = pi_Z)
## Generate intermediate variable (S = 1, adherence)
XZ_matrix <- matrix(c(rep(1, N),
Z,
Sex,
Trans,
Age),
nrow = N,
byrow = F)
S_prob <-  1 / (1 + exp(- XZ_matrix %*% S_coef))
S <- apply(S_prob, 1, function(prob){
rbinom(1, size = 1, prob = prob)
})
## Generate outcome Y
XZS_matrix <- matrix(c(rep(1, N),
Z,
S,
Sex,
Trans,
Age,
Sex * Z,
Age * S),
nrow = N,
byrow = F)
Y_mu <- XZS_matrix %*% Y_coef
Y <- rnorm(N, mean = Y_mu, sd = Y_sd)
data <- data.frame(Z,
Sex,
Trans,
Age,
S,
Y
)
return(data)
}
set.seed(123)
data_true <- f_sim(N = 10^6)
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau11_true
0.01448385 / 0.24302139
0.03/0.67
S_coef_simu <- c(-1, # intercept,
1, # coef of Z,
0.6, # coef of Sex,
-0.4, # coef of Trans,
0.02 # coef of Age
)
Y_coef_simu <-  c(0.5, # intercept,
-0.3, # coef of Z
0.7, # coef of S
0.2, # coef of Sex
-0.2, # coef of Trans
0.01, # coef of Age
0.1, # coef of Sex * Z
0.01 # coef of Age * S
)
# Based on vaccine data, we have 3 baseline covariates:
#  Sex (binary), transformed variable (binary), age (continuous)
f_sim <- function(N = 200*2, # sample size for two groups
seed = 123, # random seed
pi_Z = 0.5, # treatment propensity score: ratio of treatment / control, constant
male_p = 0.5, # ratio of male
trans_p = 0.8, # ratio of transformed variable
age_mu = 50, # mean of age
age_sd = 4, # sd of age
S_coef = S_coef_simu, # coef of S's model - c(intercept, Z, Sex, Trans, Age)
Y_coef = Y_coef_simu,
Y_sd = 0.4
){
set.seed(seed)
## Generate baseline variables
Sex <- rbinom(n = N, size = 1, prob = male_p) # 1 means male, 0 means female
Trans <- rbinom(n = N, size = 1, prob = trans_p)
Age <- rnorm(n = N, mean = age_mu, sd = age_sd)
## Generate treatment assignment Z (Z = 1, treatment)
Z <- rbinom(N, size = 1, prob = pi_Z)
## Generate intermediate variable (S = 1, adherence)
XZ_matrix <- matrix(c(rep(1, N),
Z,
Sex,
Trans,
Age),
nrow = N,
byrow = F)
S_prob <-  1 / (1 + exp(- XZ_matrix %*% S_coef))
S <- apply(S_prob, 1, function(prob){
rbinom(1, size = 1, prob = prob)
})
## Generate outcome Y
XZS_matrix <- matrix(c(rep(1, N),
Z,
S,
Sex,
Trans,
Age,
Sex * Z,
Age * S),
nrow = N,
byrow = F)
Y_mu <- XZS_matrix %*% Y_coef
Y <- rnorm(N, mean = Y_mu, sd = Y_sd)
data <- data.frame(Z,
Sex,
Trans,
Age,
S,
Y
)
return(data)
}
set.seed(123)
data_true <- f_sim(N = 10^6)
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau11_true
tau10 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_10_X <- p1_X - p0_X
e_00_X <- 1 - p1_X
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_00_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 0 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 0
res1 <- mean(e_10_X*S*Z*Y / (p1-p0) / p1_X / (1/2) ) -
mean(e_10_X * (1-S) * (1-Z) * Y / (p1-p0) / (1-p0_X)/ (1/2))
res2 <- mean( ((S * Z / (1/2)) - S * (1 - Z) / (1/2)) * (mu_11_X - mu_00_X) / (p1-p0))
res3 <-  mean((p1_X - p0_X) * (mu_11_X - mu_00_X) / (p1 - p0) )
return(c(res1, res2, res3))
}
tau00 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_00_X <- 1 - p1_X
mu_10_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 0 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 0
mu_00_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 0 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 0
res1 <- mean((1 - S)*Z*Y / (1 - p1)/(1/2)) - mean(e_00_X * (1-S)*(1-Z)*Y / (1-p1) / (1-p0_X)/ (1/2))
res2 <- mean( (1 - S*Z/(1/2)) / (1 - p1) *  (mu_10_X - mu_00_X))
res3 <- mean((1-p1_X)/(1-p1) * (mu_10_X - mu_00_X) )
return(c(res1, res2, res3))
}
tau11 <- function(data,
S_coef = S_coef_simu,
Y_coef = Y_coef_simu){
Z <- data$Z
S <- data$S
Y <- data$Y
X1 <- data$Sex
X2 <- data$Trans
X3 <- data$Age
p1_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 1 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p0_X <- 1 / (1 + exp(- (S_coef[1] + S_coef[2] * 0 + S_coef[3] * X1 + S_coef[4] * X2 + S_coef[5] * X3)))
p1 <- mean(p1_X)
p0 <- mean(p0_X)
e_11_X <- p0_X
mu_11_X <- Y_coef[1] + Y_coef[2] * 1 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 1 + Y_coef[8] * X3 * 1
mu_01_X <- Y_coef[1] + Y_coef[2] * 0 + Y_coef[3] * 1 + Y_coef[4] * X1 +
Y_coef[5] * X2 + Y_coef[6] * X3 + Y_coef[7] * X1 * 0 + Y_coef[8] * X3 * 1
res1 <- mean(e_11_X*S*Z*Y / p0 / p1_X / (1/2) ) -
mean( S * (1-Z) * Y / p0 / (1/2))
res2 <- mean( S*(1-Z) / (1/2) / p0 * (mu_11_X - mu_01_X) )
res3 <-  mean( p0_X / p0 * (mu_11_X - mu_01_X))
diff <- mean((p1_X/ p1 - p0_X/p0) * mu_11_X)
return(c(res1, res2, res3, diff))
}
tau11_true <- tau11(data_true)
tau10_true <- tau10(data_true)
tau00_true <- tau00(data_true)
tau11_true
tau10_true
tau00_true
