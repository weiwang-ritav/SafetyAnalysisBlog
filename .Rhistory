Crl_ests <- dplyr::select(SIM_control, Alpha, month6, Var_month6)
Crl_ests$diff <- Crl_ests$month6 - baseline_crl_mean
Crl_ests <- dplyr::select(Crl_ests, Alpha, Var_month6, diff) %>%
rename(Alpha_crl = Alpha, Est_crl = diff, Var_crl = Var_month6)
Estimate_vec <- rep(NA, A^2)
Lower_ci <- rep(NA, A^2)
Upper_ci <- rep(NA, A^2)
Alpha_trt <- rep(NA, A^2)
Alpha_crl <- rep(NA, A^2)
for(a in 1:A){
for(b in 1:A){
df_trt <- filter(Trt_ests, Alpha_trt == Alpha_seq[a])
df_crl <- filter(Crl_ests, Alpha_crl == Alpha_seq[b])
var_JN <- JN_var(data_trt = data_trt,
data_crl = data_crl,
alpha_trt =  Alpha_seq[a],
alpha_crl =  Alpha_seq[b],
month = 6)
h <- (a-1)*A + b
Estimate_vec[h] <- df_trt$Est_trt - df_crl$Est_crl
Lower_ci[h] <- Estimate_vec[h] - qnorm(0.975) * sqrt(var_JN)
Upper_ci[h] <- Estimate_vec[h] + qnorm(0.975) * sqrt(var_JN)
Alpha_trt[h] <- Alpha_seq[a]
Alpha_crl[h] <- Alpha_seq[b]
}
print(a)
}
plot_df <- data.frame(Alpha_trt,
Alpha_crl,
Estimate_vec,
Lower_ci,
Upper_ci)
head(plot_df)
plot_df <- data.frame(Alpha_trt,
Alpha_crl,
Estimate_vec,
Lower_ci,
Upper_ci)
head(plot_df)
saveRDS(plot_df, "MAVE_mave_grid_adapt/result/Contour_plot_month6_SIM.rds")
# treatment group
Trt_ests <- dplyr::select(SIM_treat, Alpha, month12, Var_month12)
Trt_ests$diff <- Trt_ests$month12 - baseline_trt_mean
Trt_ests <- dplyr::select(Trt_ests, Alpha, Var_month12, diff) %>%
rename(Alpha_trt = Alpha, Est_trt = diff, Var_trt = Var_month12)
# control group
Crl_ests <- dplyr::select(SIM_control, Alpha, month12, Var_month12)
Crl_ests$diff <- Crl_ests$month12 - baseline_crl_mean
Crl_ests <- dplyr::select(Crl_ests, Alpha, Var_month12, diff) %>%
rename(Alpha_crl = Alpha, Est_crl = diff, Var_crl = Var_month12)
Estimate_vec <- rep(NA, A^2)
Lower_ci <- rep(NA, A^2)
Upper_ci <- rep(NA, A^2)
Alpha_trt <- rep(NA, A^2)
Alpha_crl <- rep(NA, A^2)
for(a in 1:A){
for(b in 1:A){
df_trt <- filter(Trt_ests, Alpha_trt == Alpha_seq[a])
df_crl <- filter(Crl_ests, Alpha_crl == Alpha_seq[b])
var_JN <- JN_var(data_trt = data_trt,
data_crl = data_crl,
alpha_trt =  Alpha_seq[a],
alpha_crl =  Alpha_seq[b],
month = 12)
h <- (a-1)*A + b
Estimate_vec[h] <- df_trt$Est_trt - df_crl$Est_crl
Lower_ci[h] <- Estimate_vec[h] - qnorm(0.975) * sqrt(var_JN)
Upper_ci[h] <- Estimate_vec[h] + qnorm(0.975) * sqrt(var_JN)
Alpha_trt[h] <- Alpha_seq[a]
Alpha_crl[h] <- Alpha_seq[b]
}
print(a)
}
plot_df <- data.frame(Alpha_trt,
Alpha_crl,
Estimate_vec,
Lower_ci,
Upper_ci)
head(plot_df)
saveRDS(plot_df, "MAVE_mave_grid_adapt/result/Contour_plot_month12_SIM.rds")
########## generate the bootstrap t confidence interval ##########
# load the bootstrap dataset
rm(list=ls())
library(ggplot2)
library(dplyr)
setwd("/Users/jane.gao/Desktop/Sensitivity analysis/5. Data analysis/3. HAP2")
# Load the JN estimation results
data_SIM_crl <- readRDS("MAVE_mave_grid_adapt/result/SIM_control_CI_HAP2")
data_SIM_trt <- readRDS("MAVE_mave_grid_adapt/result/SIM_treat_CI_HAP2")
range_value <- c(1.2, 3)
Alpha_seq <- c(-0.7, -0.5, -0.3, 0, 0.3, 0.5, 0.7)
######## Load the original data ########
{
data <- readRDS("data_HAP2")
End <- max(data$time, na.rm = T) + 1
data2 <- filter(data, time <= End)
data_orig_crl <- filter(data2, Trt == 1) # control
data_orig_trt <- filter(data2, Trt == 2) # treat
data_orig_crl$Alpha  <- rep("original data", nrow(data_orig_crl))
data_orig_trt$Alpha  <- rep("original data", nrow(data_orig_trt))
data_orig_crl$Time <- data_orig_crl$time
data_orig_trt$Time <- data_orig_trt$time
data_orig_crl$Estimate <- data_orig_crl$value
data_orig_trt$Estimate <- data_orig_trt$value
}
# load the estimation results from original ARC_data (no bootstrap)
Orig_res_crl <- readRDS("MAVE_mave_grid_adapt/result/HAP2_control_CI_orig.RData")
Orig_res_trt <- readRDS("MAVE_mave_grid_adapt/result/HAP2_treat_CI_orig.RData")
# calculate bootstrap t confidence interval or JN confidence interval
Wald_JN <- function(alpha, refer_mean, var_JN, month){
Alpha_seq <- c(-0.7, -0.5, -0.3, 0, 0.3, 0.5, 0.7)
alpha_num <- which(Alpha_seq == alpha)
mean_orig <- refer_mean[alpha_num]
CI_left <- mean_orig - qnorm(0.975) * sqrt(var_JN)
CI_right <- mean_orig + qnorm(0.975) * sqrt(var_JN)
return(c(mean_orig,  CI_left, CI_right))
}
JN_var <- function(data, alpha, month){
Month <- c(6, 12)
Alpha_seq <- c(-0.7, -0.5, -0.3, 0, 0.3, 0.5, 0.7)
index_month <- which(Month == month)*2
index_alpha <- which(Alpha_seq == alpha)
Est_JN <- rep(NA, length(data))
for(j in 1:length(data)){
temp <- data[[j]]
Est_JN[j] <- temp[index_alpha, index_month]
}
var_JN <- (length(data) - 1) / length(data) * sum((Est_JN - mean(Est_JN))^2)
return(var_JN)
}
# get the estimation of E[Y(t)] of the original data for specific month
SIM_control_06 <- Orig_res_crl$month6
SIM_control_12 <- Orig_res_crl$month12
##### month = 6 #####
month <- 6
alpha <- -0.7
refer_mean <- SIM_control_06
var_JN <- JN_var(data = data_SIM_crl, alpha, month)
t_SIM_control_06  <- Wald_JN(alpha, refer_mean =  SIM_control_06, var_JN, month)
for(alpha in Alpha_seq[-1]){
temp <- Wald_JN(alpha, refer_mean =  SIM_control_06, var_JN, month)
t_SIM_control_06  <- rbind(t_SIM_control_06, temp)
}
plot_SIM_control_df6 <- data.frame(Alpha = c("-0.7","-0.5","-0.3","0","0.3","0.5","0.7"),
Time = c(135, 150, 165, 180, 195, 210, 225),
Estimate = t_SIM_control_06[, 1],
Lower_ci = t_SIM_control_06[, 2],
Upper_ci = t_SIM_control_06[, 3])
##### month = 12 #####
month <- 12
alpha <- -0.7
refer_mean <- SIM_control_12
var_JN <- JN_var(data = data_SIM_crl, alpha, month)
t_SIM_control_12  <- Wald_JN(alpha, refer_mean =  SIM_control_12, var_JN, month)
for(alpha in Alpha_seq[-1]){
temp <- Wald_JN(alpha, refer_mean =  SIM_control_12, var_JN, month)
t_SIM_control_12  <- rbind(t_SIM_control_12, temp)
}
plot_SIM_control_df12 <- data.frame(Alpha = c("-0.7","-0.5","-0.3","0","0.3","0.5","0.7"),
Time = c(315, 330, 345, 360, 375, 390, 405),
Estimate = t_SIM_control_12[, 1],
Lower_ci = t_SIM_control_12[, 2],
Upper_ci = t_SIM_control_12[, 3])
plot_df_SIM_control <- rbind(plot_SIM_control_df6,
plot_SIM_control_df12)
plot_df_SIM_control
CI_plot_crl <- ggplot(plot_df_SIM_control, aes(x = Time, y = Estimate, colour = Alpha))+
geom_point(size = 3)+
geom_point(data = data_orig_crl, size = 0.5)+
geom_errorbar(aes(ymin = Lower_ci,ymax = Upper_ci),size = 1)+
theme_bw()+
expand_limits(x=c(0, End),
y=c(0, 6))+
scale_x_continuous(breaks = c(0, 180, 360, 540, 720, 900, 1080)) +
scale_colour_manual(values=c("#bd0026", # "#f03b20",
"#fd8d3c","#fecc5c","#ffffb2",
"#a1dab4","#41b6c4",
# "#2c7fb8",
"#253494", "grey50"),
breaks=c("0.7","0.5","0.3","0","-0.3","-0.5","-0.7", "original data"))+
labs(x="Time (Days)", y="ACQ Score", color=expression(alpha)) +
labs(color=expression(alpha))+
theme(axis.title=element_text(size=25),
legend.title=element_text(size=20),
axis.text=element_text(size=18),
legend.text=element_text(size=18))+
annotate("text", x=900, y= 5,label="Usual Care",size=6)+
geom_hline(yintercept=range_value[1],lty="dotted",size=2)+
geom_hline(yintercept=range_value[2],lty="dotted",size=2)
CI_plot_crl
ggsave(plot = CI_plot_crl,
width = 9,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/CI_control_n07_07.png")
# get the estimation of E[Y(t)] of the original dataset for specific month
SIM_treat_06 <- Orig_res_trt$month6
SIM_treat_12 <- Orig_res_trt$month12
##### month = 6 #####
month <- 6
alpha <- -0.7
refer_mean <- SIM_treat_06
var_JN <- JN_var(data = data_SIM_trt, alpha, month)
t_SIM_treat_06  <- Wald_JN(alpha, refer_mean =  SIM_treat_06, var_JN, month)
for(alpha in Alpha_seq[-1]){
temp <- Wald_JN(alpha, refer_mean =  SIM_treat_06, var_JN, month)
t_SIM_treat_06  <- rbind(t_SIM_treat_06, temp)
}
plot_SIM_treat_df6 <- data.frame(Alpha = c("-0.7","-0.5","-0.3","0","0.3","0.5","0.7"),
Time = c(135, 150, 165, 180, 195, 210, 225),
Estimate = t_SIM_treat_06[, 1],
Lower_ci = t_SIM_treat_06[, 2],
Upper_ci = t_SIM_treat_06[, 3])
##### month = 12 #####
month <- 12
alpha <- -0.7
refer_mean <- SIM_treat_12
var_JN <- JN_var(data = data_SIM_trt, alpha, month)
t_SIM_treat_12  <- Wald_JN(alpha, refer_mean =  SIM_treat_12, var_JN, month)
for(alpha in Alpha_seq[-1]){
temp <- Wald_JN(alpha, refer_mean =  SIM_treat_12, var_JN, month)
t_SIM_treat_12  <- rbind(t_SIM_treat_12, temp)
}
plot_SIM_treat_df12 <- data.frame(Alpha = c("-0.7","-0.5","-0.3","0","0.3","0.5","0.7"),
Time = c(315, 330, 345, 360, 375, 390, 405),
Estimate = t_SIM_treat_12[, 1],
Lower_ci = t_SIM_treat_12[, 2],
Upper_ci = t_SIM_treat_12[, 3])
plot_df_SIM_treat <- rbind(plot_SIM_treat_df6,
plot_SIM_treat_df12)
plot_df_SIM_treat
CI_plot_trt <- ggplot(plot_df_SIM_treat, aes(x = Time, y = Estimate, colour = Alpha))+
geom_point(size = 3)+
geom_point(data = data_orig_trt, size = 0.5)+
geom_errorbar(aes(ymin = Lower_ci,ymax = Upper_ci),size = 1)+
theme_bw()+
expand_limits(x=c(0, End),
y=c(0, 6))+
scale_x_continuous(breaks = c(0, 180, 360, 540, 720, 900, 1080)) +
scale_colour_manual(values=c("#bd0026", # "#f03b20",
"#fd8d3c","#fecc5c","#ffffb2",
"#a1dab4","#41b6c4",
# "#2c7fb8",
"#253494", "grey50"),
breaks=c("0.7","0.5","0.3","0","-0.3","-0.5","-0.7", "original data"))+
labs(x="Time (Days)", y="ACQ Score", color=expression(alpha)) +
labs(color=expression(alpha))+
theme(axis.title=element_text(size=25),
legend.title=element_text(size=20),
axis.text=element_text(size=18),
legend.text=element_text(size=18))+
theme(legend.position = "none")+
annotate("text", x=900, y= 5,label="Patient Advocate",size=6)+
geom_hline(yintercept=range_value[1],lty="dotted",size=2)+
geom_hline(yintercept=range_value[2],lty="dotted",size=2)
CI_plot_trt
ggsave(plot = CI_plot_trt,
width = 7,
height = 6,
dpi = 500,
filename = "MAVE_mave_adapt/plots/CI_treat_n07_07.png")
CI_plot_trt
ggsave(plot = CI_plot_trt,
width = 7,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/CI_treat_n07_07.png")
rm(list=ls())
library(ggplot2)
library(metR)
library(isoband)
library(dplyr)
setwd("/Users/jane.gao/Desktop/Sensitivity analysis/5. Data analysis/3. HAP2")
# treat range: -0.3 <= alpha <= 0.52
# control range: -0.46 <= alpha <= 0.6
rm(list=ls())
library(ggplot2)
library(metR)
library(isoband)
library(dplyr)
setwd("/Users/jane.gao/Desktop/Sensitivity analysis/5. Data analysis/3. HAP2")
# treat range: -0.3 <= alpha <= 0.52
# control range: -0.46 <= alpha <= 0.6
df_m6 <- readRDS("MAVE_mave_grid_adapt/result/Contour_plot_month6_SIM.rds")
# check the estimated value and confidence interval under AAR assumption
df_m6_restrict <- filter(df_m6, Alpha_trt >= -0.36, Alpha_trt <= 0.7,
Alpha_crl >= -0.44, Alpha_crl <= 0.7)
# df_m6_restrict <- df_m6
# check s
SIM_p1 <- ggplot(df_m6_restrict, aes(x = Alpha_crl, y = Alpha_trt, z = Estimate_vec))+
geom_contour_fill(binwidth=0.2, show.legend = FALSE)+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
geom_contour2(aes(z=Estimate_vec,label=..level..),
colour="black", size=0.5, binwidth=0.2, skip=0.2,
margin=grid::unit(c(5,5,5,5),"pt"),
label.placer = label_placer_fraction(frac=0.38,
rot_adjuster=angle_fixed()),
label_size=7)+
theme_bw()+
scale_colour_divergent(mid="yellow",low="forestgreen",high="orange")+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p1
ggsave(plot = SIM_p1,
width = 7,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/contour_month6_mean.png")
df2_m6_restrict <- mutate(df_m6_restrict, CI_info = Lower_ci*(Lower_ci>0) + Upper_ci*(Upper_ci<0))
min(df2_m6_restrict$CI_info)
max(df2_m6_restrict$CI_info)
SIM_p2 <- ggplot(df2_m6_restrict, aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.5,1.5,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
# scale_fill_gradientn(values = scales::rescale(x = c(min(DF$z),19,30, max(DF$z)), to = c(0,1), from = c(min(DF$z), max(DF$z))))
SIM_p2
SIM_p2 <- ggplot(df2_m6_restrict, aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.3,1.3,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
# scale_fill_gradientn(values = scales::rescale(x = c(min(DF$z),19,30, max(DF$z)), to = c(0,1), from = c(min(DF$z), max(DF$z))))
SIM_p2
df2_m6_restrict
filter(df2_m6_restrict, CI_info == 1)
SIM_p2 <- ggplot(df2_m6_restrict, aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill()
SIM_p2
SIM_p2 <- ggplot(df2_m6_restrict, aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.1,1.1,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
# scale_fill_gradientn(values = scales::rescale(x = c(min(DF$z),19,30, max(DF$z)), to = c(0,1), from = c(min(DF$z), max(DF$z))))
SIM_p2
df2_m6_restrict$CI_info
df2_m6_restrict$CI_info  |> table()
SIM_p2 <- ggplot(df2_m6_restrict, aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.1,1.1,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
# scale_fill_gradientn(values = scales::rescale(x = c(min(DF$z),19,30, max(DF$z)), to = c(0,1), from = c(min(DF$z), max(DF$z))))
SIM_p2
SIM_p2
ggsave(plot = SIM_p2,
width = 8,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/contour_month6_diff.png")
#################################
df_m12 <- readRDS("MAVE_mave_grid_adapt/result/Contour_plot_month12_SIM.rds")
# check the estimated value and confidence interval under AAR assumption
df_m12_restrict <- filter(df_m12, Alpha_trt >= -0.36, Alpha_trt <= 0.7,
Alpha_crl >= -0.44, Alpha_crl <= 0.7)
SIM_p3 <- ggplot(df_m12_restrict,aes(x=Alpha_crl, y=Alpha_trt, z=Estimate_vec))+
geom_contour_fill(binwidth=0.2, show.legend = FALSE)+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
geom_contour2(aes(z=Estimate_vec,label=..level..),
colour="black", size=0.5, binwidth=0.2, skip=0.2,
margin=grid::unit(c(5,5,5,5),"pt"),
label.placer = label_placer_fraction(frac=0.38,
rot_adjuster=angle_fixed()),
label_size=7)+
theme_bw()+
scale_colour_divergent(mid="yellow",low="forestgreen",high="orange")+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.5, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p3
ggsave(plot = SIM_p3,
width = 7,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/contour_month12_mean.png")
df2_m12_restrict <- mutate(df_m12_restrict,CI_info=Lower_ci*(Lower_ci>0)+Upper_ci*(Upper_ci<0))
min(df2_m12_restrict$CI_info)
max(df2_m12_restrict$CI_info)
SIM_p4 <- ggplot(df2_m12_restrict,aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.5,1.5,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p4
SIM_p4 <- ggplot(df2_m12_restrict,aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-1.3,1.3,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p4
SIM_p4 <- ggplot(df2_m12_restrict,aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-0.5,0.5,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p4
SIM_p4 <- ggplot(df2_m12_restrict,aes(x=Alpha_crl, y=Alpha_trt, z=CI_info))+
geom_contour_fill(breaks=seq(-0.3,0.3,by=0.2))+
# geom_contour_fill()+
scale_fill_divergent(mid="white",low="forestgreen",high="orange")+
theme_bw()+
theme(legend.title = element_blank())+
labs(x="Alpha for Usual Care Group",y="Alpha for Patient Advocate Group")+
theme(axis.title = element_text(size=25),
axis.text = element_text(size=18),
legend.text=element_text(size=14),
legend.key.size = unit(1,"cm"))+
geom_vline(xintercept=0,lty="dotted",size=1)+
geom_hline(yintercept=0,lty="dotted",size=1)+
geom_point(x=0,y=0,size=3)+
scale_x_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))+
scale_y_continuous(breaks=c(-0.4, -0.3, 0, 0.3, 0.5, 0.7))
SIM_p4
ggsave(plot = SIM_p4,
width = 8,
height = 6,
dpi = 500,
filename = "MAVE_mave_grid_adapt/plots/contour_month12_diff.png")
The causal estimand here is defined as principal causal effects (PCEs):
Here we list the most recent principal stratification methods and provide one plot to show
hist(rnorm(1000, 30, sd = 2))
hist(rnorm(1000, 40, sd = sqrt(8)))
